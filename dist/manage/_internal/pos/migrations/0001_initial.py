# Generated by Django 5.2.5 on 2025-10-08 11:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Branch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='', max_length=100)),
                ('address', models.TextField(blank=True, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, null=True)),
                ('phone_number', models.CharField(null=True)),
                ('logo', models.FileField(null=True, upload_to='FILES/logo/')),
            ],
        ),
        migrations.CreateModel(
            name='StackHolder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, null=True)),
                ('tradename', models.CharField(max_length=100, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('street', models.TextField(blank=True, null=True)),
                ('city', models.TextField(blank=True, null=True)),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(max_length=15, null=True, unique=True)),
                ('tin_number', models.CharField(max_length=10, null=True)),
                ('vat_number', models.CharField(max_length=9, null=True)),
                ('province', models.CharField(max_length=100, null=True)),
                ('type', models.TextField(default='Customer')),
            ],
        ),
        migrations.CreateModel(
            name='Currency',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='hello')),
                ('symbol', models.TextField(null=True)),
                ('rate', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, null=True, unique=True)),
                ('taxExclusive', models.DecimalField(decimal_places=5, default=0, editable=False, max_digits=10)),
                ('hscode', models.CharField(blank=True, max_length=10, null=True)),
                ('product_code', models.CharField(max_length=20, null=True, unique=True)),
                ('selling_price', models.DecimalField(decimal_places=5, max_digits=15, null=True)),
                ('tax', models.CharField(choices=[('15', '15%'), ('0', '0%'), ('Exempt', 'Exempt')], default=15, max_length=10)),
                ('vat', models.DecimalField(decimal_places=5, default=0, editable=False, max_digits=10)),
                ('is_service', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('invoiceNo', models.TextField(null=True)),
                ('date', models.TextField(null=True)),
                ('time', models.TextField(null=True)),
                ('receipt_type', models.TextField(max_length=10)),
                ('subtotal', models.DecimalField(decimal_places=5, max_digits=12)),
                ('tax', models.DecimalField(decimal_places=5, max_digits=12)),
                ('total', models.DecimalField(decimal_places=5, max_digits=12)),
                ('payment', models.DecimalField(decimal_places=5, max_digits=12, null=True)),
                ('isA4', models.BooleanField(default=False)),
                ('Total15VAT', models.FloatField(default=0)),
                ('TotalNonVAT', models.FloatField(default=0)),
                ('TotalExempt', models.FloatField(default=0)),
                ('invoiceItems', models.TextField(null=True)),
                ('payment_method', models.TextField(default='Cash')),
                ('file', models.FileField(null=True, upload_to='')),
                ('branch', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pos.branch')),
                ('currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pos.currency')),
                ('products', models.ManyToManyField(blank=True, to='pos.product')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('stackholder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.stackholder')),
            ],
            bases=('pos.stackholder',),
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('stackholder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.stackholder')),
            ],
            bases=('pos.stackholder',),
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('stackholder_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.stackholder')),
            ],
            bases=('pos.stackholder',),
        ),
        migrations.CreateModel(
            name='BankingDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bank', models.CharField(max_length=100, null=True)),
                ('bank_branch', models.CharField(max_length=100, null=True)),
                ('account_name', models.CharField(max_length=100, null=True)),
                ('account_number', models.CharField(max_length=20, null=True)),
                ('bank_account', models.CharField(max_length=34, null=True)),
                ('swift_code', models.CharField(max_length=11, null=True)),
                ('stackholder', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pos.stackholder')),
                ('currency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pos.currency')),
            ],
        ),
        migrations.CreateModel(
            name='NonService',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.product')),
                ('is_unlimited', models.BooleanField(default=False)),
                ('whole_sale_price', models.DecimalField(decimal_places=5, default=0, editable=False, max_digits=10)),
                ('whole_sale_quantity', models.IntegerField(null=True)),
            ],
            bases=('pos.product',),
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.product')),
                ('deadline', models.DateField(null=True)),
                ('rate', models.IntegerField(null=True)),
            ],
            bases=('pos.product',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.product')),
            ],
            bases=('pos.product',),
        ),
        migrations.CreateModel(
            name='Purchase',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.transaction')),
                ('returned', models.BooleanField(default=False)),
                ('supplier', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pos.supplier')),
            ],
            bases=('pos.transaction',),
        ),
        migrations.CreateModel(
            name='Receipt',
            fields=[
                ('transaction_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.transaction')),
                ('profitBT', models.DecimalField(decimal_places=5, default=0, editable=False, max_digits=10)),
                ('profitAT', models.DecimalField(decimal_places=5, default=0, editable=False, max_digits=10)),
                ('credited', models.BooleanField(default=False)),
                ('debited', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pos.customer')),
            ],
            bases=('pos.transaction',),
        ),
        migrations.CreateModel(
            name='ReportEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(max_length=50)),
                ('tax_percent', models.CharField(blank=True, max_length=10, null=True)),
                ('money_type', models.CharField(blank=True, max_length=50, null=True)),
                ('value', models.DecimalField(decimal_places=5, default=0, max_digits=15)),
                ('fiscal', models.BooleanField(default=False)),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='pos.currency')),
            ],
        ),
        migrations.CreateModel(
            name='StockTransfer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateField(null=True)),
                ('quantity', models.IntegerField(default=0)),
                ('destination', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='to', to='pos.branch')),
                ('source', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='source', to='pos.branch')),
                ('nonservice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pos.nonservice')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('batch_no', models.IntegerField(default=1)),
                ('sold', models.IntegerField(default=0)),
                ('buying_price', models.DecimalField(decimal_places=5, max_digits=15)),
                ('profitBT', models.DecimalField(decimal_places=5, default=0, editable=False, max_digits=10)),
                ('profitAT', models.DecimalField(decimal_places=5, default=0, editable=False, max_digits=10)),
                ('quantity', models.IntegerField(default=0)),
                ('created', models.DateTimeField(null=True)),
                ('expired', models.BooleanField(default=False)),
                ('expiry_date', models.DateField(null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.branch')),
                ('transfers', models.ManyToManyField(blank=True, to='pos.stocktransfer')),
                ('supplier', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='pos.supplier')),
            ],
        ),
        migrations.CreateModel(
            name='TransactionStock',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField()),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pos.stock')),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='stocks_used', to='pos.transaction')),
            ],
        ),
        migrations.AddField(
            model_name='branch',
            name='company',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pos.company'),
        ),
        migrations.AddField(
            model_name='nonservice',
            name='stock',
            field=models.ManyToManyField(blank=True, to='pos.stock'),
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit', models.DecimalField(decimal_places=5, max_digits=12)),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='pos.nonservice')),
            ],
        ),
        migrations.CreateModel(
            name='Pack',
            fields=[
                ('product_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.product')),
                ('units', models.IntegerField(default=1)),
                ('nonservice_reference', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reference_product', to='pos.nonservice')),
            ],
            bases=('pos.product',),
        ),
        migrations.CreateModel(
            name='Return',
            fields=[
                ('purchase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.purchase')),
                ('reason', models.TextField(null=True)),
            ],
            bases=('pos.purchase',),
        ),
        migrations.CreateModel(
            name='Quotation',
            fields=[
                ('receipt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.receipt')),
            ],
            bases=('pos.receipt',),
        ),
        migrations.CreateModel(
            name='SpecialPriceSale',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='pos.product')),
                ('receipt', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='pos.receipt')),
            ],
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('receipt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.receipt')),
                ('reason', models.TextField(null=True)),
                ('receiptCredited', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipt_credited', to='pos.receipt')),
            ],
            bases=('pos.receipt',),
        ),
        migrations.CreateModel(
            name='Debit',
            fields=[
                ('receipt_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pos.receipt')),
                ('reason', models.TextField(null=True)),
                ('receiptDebited', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receipt_debited', to='pos.receipt')),
            ],
            bases=('pos.receipt',),
        ),
    ]
